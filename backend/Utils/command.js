const { exec } = require('child_process');
const nmap2Json = require('./nmap2Json');
const xml2Json = require('./xml2Json');
const readJson = require('./jsonReader');
const joomla2Json = require('./joomla2Json');
const fs = require('fs');

const execCommand = (command, tool, cwd = null) => { // remove previous output file before run command
    return new Promise((resolve, reject) => {
        console.log(cwd);
        exec(command, { cwd: cwd }, (err, stdout, stderr) => {
            console.log(tool);
            if (err) {
                console.error("Exec error: ", err);
                reject("Command failed: " + command);
                return;
            }

            // the *entire* stdout and stderr (buffered)
            // console.log(`stdout: ${stdout}`);
            // console.log(`stderr: ${stderr}`);
            if (stderr) {
                console.log("Command stderr: " + stderr);
                reject(stderr);
                return;
            }
            if (stdout) { // the command finished successfully
                console.log('Command finished successfully: ' + tool);
                const tools = ['nmap', 'whois', 'whatweb', 'wapiti', 'sqli', 'xss', 'wpscan', 'joomscan', 'dnsrecon'];
                if (tools.includes(tool)) {
                    resolve('success');
                } else if (tool === 'redirect') {
                    resolve(stdout);
                }
            }
        });
    })
};

module.exports = {
    execCommand: async(command, tool, cwd) => {
        return await execCommand(command, tool, cwd);
    }
};