const { exec } = require('child_process');
const nmap2Json = require('./nmap2Json');
const xml2Json = require('./xml2Json');
const readJson = require('./jsonReader');
const fs = require('fs');

const execCommand = (command, tool) => {
  return new Promise((resolve, reject) => {
    exec(command, (err, stdout, stderr) => {
      if (err) {
        console.error("Exec error: ", err);
        reject("Command failed: " + command);
        return;
      }

      // the *entire* stdout and stderr (buffered)
      // console.log(`stdout: ${stdout}`);
      // console.log(`stderr: ${stderr}`);
      if (stderr) {
        console.log(stderr);
        reject(stderr);
        return;
      }
      if (stdout) { // the command finished successfully
        console.log(tool);
        if (tool === 'nmap') {
          nmap2Json.nmap2Json()
            .then((json) => {
              resolve(json);
            })
            .catch((err) => {
              console.log(err);
            });
        } else if (tool === 'whois') {
          xml2Json.xml2Json()
            .then((json) => {
              resolve(json)
            })
            .catch((err) => {
              console.log(err);
            });
        } else if (tool === 'whatweb') {
          let rawData = fs.readFileSync('whatweb_output.json');
          let json = JSON.parse(rawData);
          resolve(json);
        } else if (tool === 'wapiti') {
          let rawData = fs.readFileSync('wapiti_output.json');
          let json = JSON.parse(rawData);
          resolve(json);
        }
      }
    });
  })
};

module.exports = {
  execCommand: async (command, tool) => {
    return await execCommand(command, tool);
  }
};
