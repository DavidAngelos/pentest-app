const express = require('express');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');

const execCommand = require('./command');
const ScanInfo = require('./models/scanInfo');

const app = express();

mongoose.connect("mongodb+srv://root:1flzthOeWOzINC0x@cluster0-vgqu3.mongodb.net/thesis-app?retryWrites=true&w=majority", { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to db!');
  })
  .catch((err) => {
    console.log('Connection failed:' + err);
  });

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

app.use((req, res, next) => {
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Headers", "Origin, X-Request-With, Content-Type, Accept");
  res.setHeader("Access-Control-Allow-Methods", "GET, POST, PATCH, DELETE, OPTIONS");
  next();
});

app.post("/api/scan/nmap", (req, res, next) => {
  /*
  if i want to create a new obj to store to db:
    const scanInfo = new ScanInfo({
      ip: req.body.ip,
      command: req.body.command
    });
    scanInfo.save();
   */
  const scanInfo = req.body;
  console.log(scanInfo);
  execCommand.execCommand(req.body.insertedCommand, 'nmap')
    .then((commandOutput) => {
      res.status(200).json({
        message: 'Scan successful!',
        output: commandOutput
      });
    })
    .catch((reject) => {
      console.log(reject);
    });
});

app.post("/api/scan/whois", (req, res, next) => {
  /*
  if i want to create a new obj to store to db:
    const scanInfo = new ScanInfo({
      ip: req.body.ip,
      command: req.body.command
    });
    scanInfo.save();
   */
  const scanInfo = req.body;
  console.log(scanInfo);
  execCommand.execCommand(req.body.insertedCommand, 'whois')
    .then((commandOutput) => {
      res.status(200).json({
        message: 'Scan successful!',
        output: commandOutput
      });
    })
    .catch((reject) => {
      console.log(reject);
    });
});

app.post("/api/scan/whatweb", (req, res, next) => {
  /*
  if i want to create a new obj to store to db:
    const scanInfo = new ScanInfo({
      ip: req.body.ip,
      command: req.body.command
    });
    scanInfo.save();
   */
  const scanInfo = req.body;
  console.log(scanInfo);
  execCommand.execCommand(req.body.insertedCommand, 'whatweb')
    .then((commandOutput) => {
      res.status(200).json({
        message: 'Scan successful!',
        output: commandOutput
      });
    })
    .catch((reject) => {
      console.log(reject);
    });
});

app.get("/api/scan", (req, res, next) => {
  /*
  if i want to fetch data from db
    ScanInfo.find()
      .then(documents => {
        console.log(documents);
        res.status(200).json({
          message: 'Scan successful!',
          output: documents
        });
       });
   */
});

module.exports = app;
