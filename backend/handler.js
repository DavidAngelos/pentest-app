const command = require('./Utils/command');
const nmap = require('./tools/nmap');
const whois = require('./tools/whois');
const whatweb = require('./tools/whatweb');
const pentest = require('./tools/auto');

const chooseTool = (url, tool, type) => {
    return new Promise((resolve, reject) => {
        switch (tool) {
            case "nmap":
                nmapTool(url)
                    .then((nmapInfo) => resolve(nmapInfo))
                    .catch((err) => err);
                break;
            case "whois":
                whoisTool(url)
                    .then((whoisInfo) => resolve(whoisInfo))
                    .catch((err) => err);
                break;
            case "whatweb":
                whatwebTool(url)
                    .then((whatwebInfo) => resolve(whatwebInfo))
                    .catch((err) => err);
                break;
            case "wapiti" || "sqli" || "xss":

                break;
            case "auto":
                autoScanTool(url)
                    .then((autoScanInfo) => resolve(autoScanInfo))
                    .catch((err) => err);
                break;
        }
    })
};

function nmapTool(url) {
    return new Promise((resolve, reject) => {
        nmap.defaultNmapScan(url)
            .then((commandOutput) => {
                if (commandOutput !== 'success') {
                    reject('failed');
                }
                nmap.mapNmap2Json()
                    .then((json) => {
                        nmap.getInfo(json)
                            .then((nmapInfo) => {
                                resolve(nmapInfo);
                            })
                            .catch((err) => {
                                reject(err);
                            });
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            })
            .catch((err) => {
                reject(err);
            });
    });
}

function whoisTool(url) {
    return new Promise((resolve, reject) => {
        whois.defaultWhoisLookup(url)
            .then((commandOutput) => {
                if (commandOutput !== 'success') {
                    reject('failed');
                }
                whois.whoisLookup2Json()
                    .then((json) => {
                        resolve(json);
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            })
            .catch((err) => {
                reject(err);
            });
    });
}

function whatwebTool(url) {
    return new Promise((resolve, reject) => {
        whatweb.defaultWhatWebScan(url)
            .then((commandOutput) => {
                if (commandOutput !== 'success') {
                    reject('failed');
                }
                whatweb.whatweb2Json()
                    .then((json) => {
                        whatwebTool.whatwebInfo(json)
                            .then((whatwebInfo) => resolve(whatwebInfo))
                            .catch((err) => err);
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            })
            .catch((err) => {
                reject(err);
            });
    });
}

function autoScanTool(url) {
    return new Promise((resolve, reject) => {
        pentest.autoScan(url)
            .then((commandOutput) => {
                // TODO: Do sth
                resolve(commandOutput);
            })
            .catch((err) => {
                reject(err);
            });
    });
}


module.exports = {
    chooseTool: async (url, tool, type) => {
        return await chooseTool(url, tool, type);
    }
};
