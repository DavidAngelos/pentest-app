const nmap = require('./nmap');
const whatweb = require('./whatweb');
const wordpress = require('./wordpress');
const joomla = require('./joomla');

const autoScan = (url, proxy) => {
    return new Promise((resolve, reject) => {
        nmap.nmapTool(url, "common")
            .then((nmapOutput) => {
                const openPorts = nmapOutput['openPorts'];
                const vulns = nmapOutput['vulnerabilities'];
                if (openPorts.includes('80')) {
                    // continue with whatweb scan
                    console.log(openPorts);
                    whatweb.whatwebTool(url, "default", proxy)
                        .then((whatwebOutput) => {
                            if (Object.keys(whatwebOutput).includes('WordPress')) {
                                const wordpressVersion = whatwebOutput['WordPress']['version'];
                                console.log('Wordpress found with version ' + wordpressVersion);
                                // continue with wpscan scan
                                wordpress.wordpressTool(url, "default", proxy)
                                    .then((wordpressOutput) => {
                                        console.log(wordpressOutput);
                                        console.log('Interesting URLs found: ');
                                        wordpressOutput['interesting_findings'].forEach(finding => {
                                            console.log(finding['url']);
                                        });

                                        // bruteforce
                                        wordpress.wordpressTool(url, "bruteforce", proxy)
                                            .then((wordpressOutput) => {
                                                console.log(wordpressOutput);
                                            })
                                            .catch((err) => reject(err));

                                    })
                                    .catch((err) => reject(err));
                            } else if (Object.keys(whatwebOutput).includes('Joomla')) {
                                const joomlaVersion = whatwebOutput['Joomla']['version'];
                                console.log('Joomla found with version ' + joomlaVersion);
                                // continue with joomscan scan
                                joomla.joomlaTool(url, "default", proxy)
                                    .then((joomlaOutput) => {
                                        console.log(joomlaOutput);
                                        joomlaOutput['Robots'].forEach(finding => {
                                            console.log(finding['interestingPath']);
                                        });
                                    })
                                    .catch((err) => reject(err));
                            }
                        })
                        .catch((err) => reject(err));

                    //TODO Add SQLi scan
                }
                //TODO Nmap vuln scan

            })
            .catch((err) => reject(err));
    });
};

function autoScanTool(url, proxy) {
    return new Promise((resolve, reject) => {
        autoScan(url, proxy)
            .then((commandOutput) => {
                // TODO: Do sth
                resolve(commandOutput);
            })
            .catch((err) => {
                reject(err);
            });
    });
}

module.exports = {
    autoScanTool: async(url, proxy) => {
        return await autoScanTool(url, proxy);
    }
};