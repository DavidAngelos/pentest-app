const command = require('../Utils/command');
const fs = require('fs');
const config = require('../config/config');


const defaultScan = (url) => {
    return new Promise((resolve, reject) => {
        command.execCommand(config.WHATWEB + ' ' + url + ' --log-json=outputs/whatwebOutput', 'whatweb')
            .then((commandOutput) => {
                resolve(commandOutput);
            })
            .catch((err) => {
                reject(err);
            });
    });
};

function toJson() {
    return new Promise((resolve, reject) => {
        let rawData = fs.readFileSync('outputs/whatwebOutput');
        let json = JSON.parse(rawData);
        command.execCommand('rm -f outputs/whatwebOutput', 'clean');
        console.log('Finshed Convertion whatweb.');
        resolve(json);
    });
}

function getInfo(json) {
    return new Promise((resolve, reject) => {
        let plugins = null;
        json.forEach(info => {
          if (info['plugins'] !== undefined) {
            if (info['plugins']['RedirectLocation'] === undefined) {
              plugins = info['plugins'];
            }
          }
        });
        resolve(plugins);
    });
}

function whatwebTool(url, type) {
    return new Promise((resolve, reject) => {
        switch (type) {
            case "default":
                whatwebTool_default(url)
                    .then(commandOutput => resolve(commandOutput))
                    .catch(err => reject(err));
                break;
        }
    });
}

function whatwebTool_default(url) {
    return new Promise((resolve, reject) => {
        defaultScan(url)
            .then((commandOutput) => {
                if (commandOutput !== 'success') {
                    reject('failed');
                }
                toJson()
                    .then((json) => {
                        getInfo(json)
                            .then((whatwebInfo) => resolve(whatwebInfo))
                            .catch((err) => err);
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            })
            .catch((err) => {
                reject(err);
            });
    });
}



module.exports = {
    whatwebTool: async (url, type) => {
        return await whatwebTool(url, type);
    }
};