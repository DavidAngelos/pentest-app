const command = require('../Utils/command');
const xml2Json = require('../Utils/xml2Json');
const config = require('../config/config');


const defaultLookup = (url) => {
    return new Promise((resolve, reject) => {
        command.execCommand(config.THEHARVESTER + ' -d ' + url + ' -l 100 -b google -f outputs/whois.xml', 'whois')
            .then((commandOutput) => {
                resolve(commandOutput);
                // // get open ports 
                // const ports = commandOutput["host"]["ports"];
                // const openPorts = [];
                // ports.forEach(element => {
                //     if (element["state"]["state"] === "open") {
                //         openPorts.push(element["port"]["portid"]);
                //     }
                // });
                // console.log('Nmap scan found these ports as open: ' + openPorts);
                // resolve({ 'openPorts': openPorts })
            })
            .catch((err) => {
                reject(err);
            });
    });
};

function toJson() {
    return new Promise((resolve, reject) => {
        xml2Json.xml2Json()
            .then((json) => {
              console.log('Finshed Convertion whois.');
              resolve(json)
            })
            .catch((err) => {
              reject(err);
            });
    });
}

function whoisTool(url, type) {
    return new Promise((resolve, reject) => {
        switch (type) {
            case "default":
                whoisTool_default(url)
                    .then(commandOutput => resolve(commandOutput))
                    .catch(err => reject(err));
                break;
        }
    });
}

function whoisTool_default(url) {
    return new Promise((resolve, reject) => {
        defaultLookup(url)
            .then((commandOutput) => {
                if (commandOutput !== 'success') {
                    reject('failed');
                }
                toJson()
                    .then((json) => {
                        resolve(json);
                    })
                    .catch((err) => {
                        reject(err);
                    });
            })
            .catch((err) => {
                reject(err);
            });
    });
}


module.exports = {
    whoisTool: async (url, type) => {
        return await whoisTool(url, type);
    }
};